{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\prans\\\\Desktop\\\\Projects\\\\labour_issue\\\\client\\\\src\\\\components\\\\auth\\\\ProtectedRoute.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  children,\n  role\n}) => {\n  _s();\n  const {\n    user,\n    isLoading\n  } = useAuth();\n\n  // Show loading spinner while checking authentication\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen flex items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Redirect to login if not authenticated\n  if (!user) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Check role-based access\n  if (role && user.role !== role) {\n    // Redirect to appropriate dashboard based on user's role\n    if (user.role === 'worker') {\n      return /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/worker\",\n        replace: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 14\n      }, this);\n    } else if (user.role === 'employer') {\n      return /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/employer\",\n        replace: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 14\n      }, this);\n    } else if (user.role === 'admin') {\n      return /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/admin\",\n        replace: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 14\n      }, this);\n    }\n    // Fallback to home page\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 12\n    }, this);\n  }\n\n  // User is authenticated and has the required role\n  return children;\n};\n_s(ProtectedRoute, \"6lKHjqCqGIRsHh92bje8H78laow=\", false, function () {\n  return [useAuth];\n});\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Navigate","useAuth","jsxDEV","_jsxDEV","ProtectedRoute","children","role","_s","user","isLoading","className","fileName","_jsxFileName","lineNumber","columnNumber","to","replace","_c","$RefreshReg$"],"sources":["C:/Users/prans/Desktop/Projects/labour_issue/client/src/components/auth/ProtectedRoute.js"],"sourcesContent":["import React from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { useAuth } from '../../contexts/AuthContext';\r\n\r\nconst ProtectedRoute = ({ children, role }) => {\r\n  const { user, isLoading } = useAuth();\r\n\r\n  // Show loading spinner while checking authentication\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"min-h-screen flex items-center justify-center\">\r\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600\"></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Redirect to login if not authenticated\r\n  if (!user) {\r\n    return <Navigate to=\"/login\" replace />;\r\n  }\r\n\r\n  // Check role-based access\r\n  if (role && user.role !== role) {\r\n    // Redirect to appropriate dashboard based on user's role\r\n    if (user.role === 'worker') {\r\n      return <Navigate to=\"/worker\" replace />;\r\n    } else if (user.role === 'employer') {\r\n      return <Navigate to=\"/employer\" replace />;\r\n    } else if (user.role === 'admin') {\r\n      return <Navigate to=\"/admin\" replace />;\r\n    }\r\n    // Fallback to home page\r\n    return <Navigate to=\"/\" replace />;\r\n  }\r\n\r\n  // User is authenticated and has the required role\r\n  return children;\r\n};\r\n\r\nexport default ProtectedRoute;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,OAAO,QAAQ,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,cAAc,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EAC7C,MAAM;IAAEC,IAAI;IAAEC;EAAU,CAAC,GAAGR,OAAO,CAAC,CAAC;;EAErC;EACA,IAAIQ,SAAS,EAAE;IACb,oBACEN,OAAA;MAAKO,SAAS,EAAC,+CAA+C;MAAAL,QAAA,eAC5DF,OAAA;QAAKO,SAAS,EAAC;MAAgE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnF,CAAC;EAEV;;EAEA;EACA,IAAI,CAACN,IAAI,EAAE;IACT,oBAAOL,OAAA,CAACH,QAAQ;MAACe,EAAE,EAAC,QAAQ;MAACC,OAAO;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACzC;;EAEA;EACA,IAAIR,IAAI,IAAIE,IAAI,CAACF,IAAI,KAAKA,IAAI,EAAE;IAC9B;IACA,IAAIE,IAAI,CAACF,IAAI,KAAK,QAAQ,EAAE;MAC1B,oBAAOH,OAAA,CAACH,QAAQ;QAACe,EAAE,EAAC,SAAS;QAACC,OAAO;MAAA;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAC1C,CAAC,MAAM,IAAIN,IAAI,CAACF,IAAI,KAAK,UAAU,EAAE;MACnC,oBAAOH,OAAA,CAACH,QAAQ;QAACe,EAAE,EAAC,WAAW;QAACC,OAAO;MAAA;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAC5C,CAAC,MAAM,IAAIN,IAAI,CAACF,IAAI,KAAK,OAAO,EAAE;MAChC,oBAAOH,OAAA,CAACH,QAAQ;QAACe,EAAE,EAAC,QAAQ;QAACC,OAAO;MAAA;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IACzC;IACA;IACA,oBAAOX,OAAA,CAACH,QAAQ;MAACe,EAAE,EAAC,GAAG;MAACC,OAAO;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACpC;;EAEA;EACA,OAAOT,QAAQ;AACjB,CAAC;AAACE,EAAA,CAjCIH,cAAc;EAAA,QACUH,OAAO;AAAA;AAAAgB,EAAA,GAD/Bb,cAAc;AAmCpB,eAAeA,cAAc;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}