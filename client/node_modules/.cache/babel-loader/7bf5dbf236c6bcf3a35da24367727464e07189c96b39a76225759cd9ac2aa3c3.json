{"ast":null,"code":"import _objectSpread from\"C:/Users/prans/Desktop/Projects/labour_issue/client/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{createContext,useContext,useReducer,useEffect}from'react';import{useNavigate}from'react-router-dom';import api from'../services/api';import toast from'react-hot-toast';// Action types\nimport{jsx as _jsx}from\"react/jsx-runtime\";const AUTH_ACTIONS={SET_LOADING:'SET_LOADING',SET_USER:'SET_USER',SET_TOKEN:'SET_TOKEN',LOGOUT:'LOGOUT',UPDATE_PROFILE:'UPDATE_PROFILE',SET_ERROR:'SET_ERROR'};// Initial state\nconst initialState={user:null,token:localStorage.getItem('token'),isLoading:true,error:null};// Reducer\nconst authReducer=(state,action)=>{switch(action.type){case AUTH_ACTIONS.SET_LOADING:return _objectSpread(_objectSpread({},state),{},{isLoading:action.payload});case AUTH_ACTIONS.SET_USER:return _objectSpread(_objectSpread({},state),{},{user:action.payload,isLoading:false,error:null});case AUTH_ACTIONS.SET_TOKEN:return _objectSpread(_objectSpread({},state),{},{token:action.payload});case AUTH_ACTIONS.LOGOUT:return _objectSpread(_objectSpread({},state),{},{user:null,token:null,isLoading:false,error:null});case AUTH_ACTIONS.UPDATE_PROFILE:return _objectSpread(_objectSpread({},state),{},{user:_objectSpread(_objectSpread({},state.user),action.payload)});case AUTH_ACTIONS.SET_ERROR:return _objectSpread(_objectSpread({},state),{},{error:action.payload,isLoading:false});default:return state;}};// Create context\nconst AuthContext=/*#__PURE__*/createContext();// Auth provider component\nexport const AuthProvider=_ref=>{let{children}=_ref;const[state,dispatch]=useReducer(authReducer,initialState);const navigate=useNavigate();// Set auth token in API headers\nuseEffect(()=>{if(state.token){api.defaults.headers.common['Authorization']=\"Bearer \".concat(state.token);localStorage.setItem('token',state.token);}else{delete api.defaults.headers.common['Authorization'];localStorage.removeItem('token');}},[state.token]);// Check if user is authenticated on app load\nuseEffect(()=>{const checkAuth=async()=>{if(state.token){try{const response=await api.get('/auth/me');dispatch({type:AUTH_ACTIONS.SET_USER,payload:response.data.user});}catch(error){console.error('Auth check failed:',error);dispatch({type:AUTH_ACTIONS.LOGOUT});}}else{dispatch({type:AUTH_ACTIONS.SET_LOADING,payload:false});}};checkAuth();},[state.token]);// Login with OTP\nconst loginWithOTP=async(phone,role)=>{try{dispatch({type:AUTH_ACTIONS.SET_LOADING,payload:true});const response=await api.post('/auth/otp/send',{phone,role});toast.success('OTP sent successfully!');return response.data;}catch(error){var _error$response,_error$response$data;const message=((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.error)||'Failed to send OTP';toast.error(message);throw error;}finally{dispatch({type:AUTH_ACTIONS.SET_LOADING,payload:false});}};// Verify OTP and login\nconst verifyOTP=async(phone,otp,role)=>{try{dispatch({type:AUTH_ACTIONS.SET_LOADING,payload:true});const response=await api.post('/auth/otp/verify',{phone,otp,role});dispatch({type:AUTH_ACTIONS.SET_TOKEN,payload:response.data.token});dispatch({type:AUTH_ACTIONS.SET_USER,payload:response.data.user});toast.success(response.data.message);// Redirect based on role\nif(response.data.isNewUser){navigate(\"/\".concat(role,\"/profile\"));}else{navigate(\"/\".concat(role));}return response.data;}catch(error){var _error$response2,_error$response2$data;const message=((_error$response2=error.response)===null||_error$response2===void 0?void 0:(_error$response2$data=_error$response2.data)===null||_error$response2$data===void 0?void 0:_error$response2$data.error)||'Failed to verify OTP';toast.error(message);throw error;}finally{dispatch({type:AUTH_ACTIONS.SET_LOADING,payload:false});}};// Login with password\nconst loginWithPassword=async(phone,password,role)=>{try{dispatch({type:AUTH_ACTIONS.SET_LOADING,payload:true});const response=await api.post('/auth/login',{phone,password,role});dispatch({type:AUTH_ACTIONS.SET_TOKEN,payload:response.data.token});dispatch({type:AUTH_ACTIONS.SET_USER,payload:response.data.user});toast.success('Login successful!');// Redirect based on role\nnavigate(\"/\".concat(role));return response.data;}catch(error){var _error$response3,_error$response3$data;const message=((_error$response3=error.response)===null||_error$response3===void 0?void 0:(_error$response3$data=_error$response3.data)===null||_error$response3$data===void 0?void 0:_error$response3$data.error)||'Login failed';toast.error(message);throw error;}finally{dispatch({type:AUTH_ACTIONS.SET_LOADING,payload:false});}};// Set password\nconst setPassword=async password=>{try{const response=await api.post('/auth/set-password',{password});toast.success('Password set successfully!');return response.data;}catch(error){var _error$response4,_error$response4$data;const message=((_error$response4=error.response)===null||_error$response4===void 0?void 0:(_error$response4$data=_error$response4.data)===null||_error$response4$data===void 0?void 0:_error$response4$data.error)||'Failed to set password';toast.error(message);throw error;}};// Logout\nconst logout=()=>{dispatch({type:AUTH_ACTIONS.LOGOUT});navigate('/');toast.success('Logged out successfully!');};// Update user profile\nconst updateProfile=profileData=>{dispatch({type:AUTH_ACTIONS.UPDATE_PROFILE,payload:profileData});};// Refresh token\nconst refreshToken=async()=>{try{const refreshToken=localStorage.getItem('refreshToken');if(!refreshToken){throw new Error('No refresh token available');}const response=await api.post('/auth/refresh-token',{refreshToken});dispatch({type:AUTH_ACTIONS.SET_TOKEN,payload:response.data.token});dispatch({type:AUTH_ACTIONS.SET_USER,payload:response.data.user});return response.data;}catch(error){console.error('Token refresh failed:',error);dispatch({type:AUTH_ACTIONS.LOGOUT});throw error;}};// Check if user has specific role\nconst hasRole=role=>{return state.user&&state.user.role===role;};// Check if user is authenticated\nconst isAuthenticated=()=>{return!!state.token&&!!state.user;};// Check if profile is complete\nconst isProfileComplete=()=>{return state.user&&state.user.profileCompleted>=80;};const value={// State\nuser:state.user,token:state.token,isLoading:state.isLoading,error:state.error,// Actions\nloginWithOTP,verifyOTP,loginWithPassword,setPassword,logout,updateProfile,refreshToken,// Utilities\nhasRole,isAuthenticated,isProfileComplete};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};// Custom hook to use auth context\nexport const useAuth=()=>{const context=useContext(AuthContext);if(!context){throw new Error('useAuth must be used within an AuthProvider');}return context;};export default AuthContext;","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","useNavigate","api","toast","jsx","_jsx","AUTH_ACTIONS","SET_LOADING","SET_USER","SET_TOKEN","LOGOUT","UPDATE_PROFILE","SET_ERROR","initialState","user","token","localStorage","getItem","isLoading","error","authReducer","state","action","type","_objectSpread","payload","AuthContext","AuthProvider","_ref","children","dispatch","navigate","defaults","headers","common","concat","setItem","removeItem","checkAuth","response","get","data","console","loginWithOTP","phone","role","post","success","_error$response","_error$response$data","message","verifyOTP","otp","isNewUser","_error$response2","_error$response2$data","loginWithPassword","password","_error$response3","_error$response3$data","setPassword","_error$response4","_error$response4$data","logout","updateProfile","profileData","refreshToken","Error","hasRole","isAuthenticated","isProfileComplete","profileCompleted","value","Provider","useAuth","context"],"sources":["C:/Users/prans/Desktop/Projects/labour_issue/client/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport api from '../services/api';\r\nimport toast from 'react-hot-toast';\r\n\r\n// Action types\r\nconst AUTH_ACTIONS = {\r\n  SET_LOADING: 'SET_LOADING',\r\n  SET_USER: 'SET_USER',\r\n  SET_TOKEN: 'SET_TOKEN',\r\n  LOGOUT: 'LOGOUT',\r\n  UPDATE_PROFILE: 'UPDATE_PROFILE',\r\n  SET_ERROR: 'SET_ERROR'\r\n};\r\n\r\n// Initial state\r\nconst initialState = {\r\n  user: null,\r\n  token: localStorage.getItem('token'),\r\n  isLoading: true,\r\n  error: null\r\n};\r\n\r\n// Reducer\r\nconst authReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case AUTH_ACTIONS.SET_LOADING:\r\n      return { ...state, isLoading: action.payload };\r\n    \r\n    case AUTH_ACTIONS.SET_USER:\r\n      return { ...state, user: action.payload, isLoading: false, error: null };\r\n    \r\n    case AUTH_ACTIONS.SET_TOKEN:\r\n      return { ...state, token: action.payload };\r\n    \r\n    case AUTH_ACTIONS.LOGOUT:\r\n      return { ...state, user: null, token: null, isLoading: false, error: null };\r\n    \r\n    case AUTH_ACTIONS.UPDATE_PROFILE:\r\n      return { ...state, user: { ...state.user, ...action.payload } };\r\n    \r\n    case AUTH_ACTIONS.SET_ERROR:\r\n      return { ...state, error: action.payload, isLoading: false };\r\n    \r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// Create context\r\nconst AuthContext = createContext();\r\n\r\n// Auth provider component\r\nexport const AuthProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(authReducer, initialState);\r\n  const navigate = useNavigate();\r\n\r\n  // Set auth token in API headers\r\n  useEffect(() => {\r\n    if (state.token) {\r\n      api.defaults.headers.common['Authorization'] = `Bearer ${state.token}`;\r\n      localStorage.setItem('token', state.token);\r\n    } else {\r\n      delete api.defaults.headers.common['Authorization'];\r\n      localStorage.removeItem('token');\r\n    }\r\n  }, [state.token]);\r\n\r\n  // Check if user is authenticated on app load\r\n  useEffect(() => {\r\n    const checkAuth = async () => {\r\n      if (state.token) {\r\n        try {\r\n          const response = await api.get('/auth/me');\r\n          dispatch({ type: AUTH_ACTIONS.SET_USER, payload: response.data.user });\r\n        } catch (error) {\r\n          console.error('Auth check failed:', error);\r\n          dispatch({ type: AUTH_ACTIONS.LOGOUT });\r\n        }\r\n      } else {\r\n        dispatch({ type: AUTH_ACTIONS.SET_LOADING, payload: false });\r\n      }\r\n    };\r\n\r\n    checkAuth();\r\n  }, [state.token]);\r\n\r\n  // Login with OTP\r\n  const loginWithOTP = async (phone, role) => {\r\n    try {\r\n      dispatch({ type: AUTH_ACTIONS.SET_LOADING, payload: true });\r\n      \r\n      const response = await api.post('/auth/otp/send', { phone, role });\r\n      \r\n      toast.success('OTP sent successfully!');\r\n      return response.data;\r\n    } catch (error) {\r\n      const message = error.response?.data?.error || 'Failed to send OTP';\r\n      toast.error(message);\r\n      throw error;\r\n    } finally {\r\n      dispatch({ type: AUTH_ACTIONS.SET_LOADING, payload: false });\r\n    }\r\n  };\r\n\r\n  // Verify OTP and login\r\n  const verifyOTP = async (phone, otp, role) => {\r\n    try {\r\n      dispatch({ type: AUTH_ACTIONS.SET_LOADING, payload: true });\r\n      \r\n      const response = await api.post('/auth/otp/verify', { phone, otp, role });\r\n      \r\n      dispatch({ type: AUTH_ACTIONS.SET_TOKEN, payload: response.data.token });\r\n      dispatch({ type: AUTH_ACTIONS.SET_USER, payload: response.data.user });\r\n      \r\n      toast.success(response.data.message);\r\n      \r\n      // Redirect based on role\r\n      if (response.data.isNewUser) {\r\n        navigate(`/${role}/profile`);\r\n      } else {\r\n        navigate(`/${role}`);\r\n      }\r\n      \r\n      return response.data;\r\n    } catch (error) {\r\n      const message = error.response?.data?.error || 'Failed to verify OTP';\r\n      toast.error(message);\r\n      throw error;\r\n    } finally {\r\n      dispatch({ type: AUTH_ACTIONS.SET_LOADING, payload: false });\r\n    }\r\n  };\r\n\r\n  // Login with password\r\n  const loginWithPassword = async (phone, password, role) => {\r\n    try {\r\n      dispatch({ type: AUTH_ACTIONS.SET_LOADING, payload: true });\r\n      \r\n      const response = await api.post('/auth/login', { phone, password, role });\r\n      \r\n      dispatch({ type: AUTH_ACTIONS.SET_TOKEN, payload: response.data.token });\r\n      dispatch({ type: AUTH_ACTIONS.SET_USER, payload: response.data.user });\r\n      \r\n      toast.success('Login successful!');\r\n      \r\n      // Redirect based on role\r\n      navigate(`/${role}`);\r\n      \r\n      return response.data;\r\n    } catch (error) {\r\n      const message = error.response?.data?.error || 'Login failed';\r\n      toast.error(message);\r\n      throw error;\r\n    } finally {\r\n      dispatch({ type: AUTH_ACTIONS.SET_LOADING, payload: false });\r\n    }\r\n  };\r\n\r\n  // Set password\r\n  const setPassword = async (password) => {\r\n    try {\r\n      const response = await api.post('/auth/set-password', { password });\r\n      toast.success('Password set successfully!');\r\n      return response.data;\r\n    } catch (error) {\r\n      const message = error.response?.data?.error || 'Failed to set password';\r\n      toast.error(message);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // Logout\r\n  const logout = () => {\r\n    dispatch({ type: AUTH_ACTIONS.LOGOUT });\r\n    navigate('/');\r\n    toast.success('Logged out successfully!');\r\n  };\r\n\r\n  // Update user profile\r\n  const updateProfile = (profileData) => {\r\n    dispatch({ type: AUTH_ACTIONS.UPDATE_PROFILE, payload: profileData });\r\n  };\r\n\r\n  // Refresh token\r\n  const refreshToken = async () => {\r\n    try {\r\n      const refreshToken = localStorage.getItem('refreshToken');\r\n      if (!refreshToken) {\r\n        throw new Error('No refresh token available');\r\n      }\r\n\r\n      const response = await api.post('/auth/refresh-token', { refreshToken });\r\n      \r\n      dispatch({ type: AUTH_ACTIONS.SET_TOKEN, payload: response.data.token });\r\n      dispatch({ type: AUTH_ACTIONS.SET_USER, payload: response.data.user });\r\n      \r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Token refresh failed:', error);\r\n      dispatch({ type: AUTH_ACTIONS.LOGOUT });\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // Check if user has specific role\r\n  const hasRole = (role) => {\r\n    return state.user && state.user.role === role;\r\n  };\r\n\r\n  // Check if user is authenticated\r\n  const isAuthenticated = () => {\r\n    return !!state.token && !!state.user;\r\n  };\r\n\r\n  // Check if profile is complete\r\n  const isProfileComplete = () => {\r\n    return state.user && state.user.profileCompleted >= 80;\r\n  };\r\n\r\n  const value = {\r\n    // State\r\n    user: state.user,\r\n    token: state.token,\r\n    isLoading: state.isLoading,\r\n    error: state.error,\r\n    \r\n    // Actions\r\n    loginWithOTP,\r\n    verifyOTP,\r\n    loginWithPassword,\r\n    setPassword,\r\n    logout,\r\n    updateProfile,\r\n    refreshToken,\r\n    \r\n    // Utilities\r\n    hasRole,\r\n    isAuthenticated,\r\n    isProfileComplete\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\n// Custom hook to use auth context\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport default AuthContext;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}