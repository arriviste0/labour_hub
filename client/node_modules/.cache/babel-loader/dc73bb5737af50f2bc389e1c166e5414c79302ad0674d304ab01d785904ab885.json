{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\prans\\\\Desktop\\\\Projects\\\\labour_issue\\\\client\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport api from '../services/api';\nimport toast from 'react-hot-toast';\n\n// Action types\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AUTH_ACTIONS = {\n  SET_LOADING: 'SET_LOADING',\n  SET_USER: 'SET_USER',\n  SET_TOKEN: 'SET_TOKEN',\n  LOGOUT: 'LOGOUT',\n  UPDATE_PROFILE: 'UPDATE_PROFILE',\n  SET_ERROR: 'SET_ERROR'\n};\n\n// Initial state\nconst initialState = {\n  user: null,\n  token: localStorage.getItem('token'),\n  isLoading: true,\n  error: null\n};\n\n// Reducer\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case AUTH_ACTIONS.SET_LOADING:\n      return {\n        ...state,\n        isLoading: action.payload\n      };\n    case AUTH_ACTIONS.SET_USER:\n      return {\n        ...state,\n        user: action.payload,\n        isLoading: false,\n        error: null\n      };\n    case AUTH_ACTIONS.SET_TOKEN:\n      return {\n        ...state,\n        token: action.payload\n      };\n    case AUTH_ACTIONS.LOGOUT:\n      return {\n        ...state,\n        user: null,\n        token: null,\n        isLoading: false,\n        error: null\n      };\n    case AUTH_ACTIONS.UPDATE_PROFILE:\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          ...action.payload\n        }\n      };\n    case AUTH_ACTIONS.SET_ERROR:\n      return {\n        ...state,\n        error: action.payload,\n        isLoading: false\n      };\n    default:\n      return state;\n  }\n};\n\n// Create context\nconst AuthContext = /*#__PURE__*/createContext();\n\n// Auth provider component\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(authReducer, initialState);\n  const navigate = useNavigate();\n\n  // Set auth token in API headers\n  useEffect(() => {\n    if (state.token) {\n      api.defaults.headers.common['Authorization'] = `Bearer ${state.token}`;\n      localStorage.setItem('token', state.token);\n    } else {\n      delete api.defaults.headers.common['Authorization'];\n      localStorage.removeItem('token');\n    }\n  }, [state.token]);\n\n  // Check if user is authenticated on app load\n  useEffect(() => {\n    const checkAuth = async () => {\n      if (state.token) {\n        try {\n          const response = await api.get('/auth/me');\n          dispatch({\n            type: AUTH_ACTIONS.SET_USER,\n            payload: response.data.user\n          });\n        } catch (error) {\n          console.error('Auth check failed:', error);\n          dispatch({\n            type: AUTH_ACTIONS.LOGOUT\n          });\n        }\n      } else {\n        dispatch({\n          type: AUTH_ACTIONS.SET_LOADING,\n          payload: false\n        });\n      }\n    };\n    checkAuth();\n  }, [state.token]);\n\n  // Login with OTP\n  const loginWithOTP = async (phone, role) => {\n    try {\n      dispatch({\n        type: AUTH_ACTIONS.SET_LOADING,\n        payload: true\n      });\n      const response = await api.post('/auth/otp/send', {\n        phone,\n        role\n      });\n      toast.success('OTP sent successfully!');\n      return response.data;\n    } catch (error) {\n      var _error$response, _error$response$data;\n      const message = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Failed to send OTP';\n      toast.error(message);\n      throw error;\n    } finally {\n      dispatch({\n        type: AUTH_ACTIONS.SET_LOADING,\n        payload: false\n      });\n    }\n  };\n\n  // Verify OTP and login\n  const verifyOTP = async (phone, otp, role) => {\n    try {\n      dispatch({\n        type: AUTH_ACTIONS.SET_LOADING,\n        payload: true\n      });\n      const response = await api.post('/auth/otp/verify', {\n        phone,\n        otp,\n        role\n      });\n      dispatch({\n        type: AUTH_ACTIONS.SET_TOKEN,\n        payload: response.data.token\n      });\n      dispatch({\n        type: AUTH_ACTIONS.SET_USER,\n        payload: response.data.user\n      });\n      toast.success(response.data.message);\n\n      // Redirect based on role\n      if (response.data.isNewUser) {\n        navigate(`/${role}/profile`);\n      } else {\n        navigate(`/${role}`);\n      }\n      return response.data;\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      const message = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || 'Failed to verify OTP';\n      toast.error(message);\n      throw error;\n    } finally {\n      dispatch({\n        type: AUTH_ACTIONS.SET_LOADING,\n        payload: false\n      });\n    }\n  };\n\n  // Login with password\n  const loginWithPassword = async (phone, password, role) => {\n    try {\n      dispatch({\n        type: AUTH_ACTIONS.SET_LOADING,\n        payload: true\n      });\n      const response = await api.post('/auth/login', {\n        phone,\n        password,\n        role\n      });\n      dispatch({\n        type: AUTH_ACTIONS.SET_TOKEN,\n        payload: response.data.token\n      });\n      dispatch({\n        type: AUTH_ACTIONS.SET_USER,\n        payload: response.data.user\n      });\n      toast.success('Login successful!');\n\n      // Redirect based on role\n      navigate(`/${role}`);\n      return response.data;\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      const message = ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.error) || 'Login failed';\n      toast.error(message);\n      throw error;\n    } finally {\n      dispatch({\n        type: AUTH_ACTIONS.SET_LOADING,\n        payload: false\n      });\n    }\n  };\n\n  // Set password\n  const setPassword = async password => {\n    try {\n      const response = await api.post('/auth/set-password', {\n        password\n      });\n      toast.success('Password set successfully!');\n      return response.data;\n    } catch (error) {\n      var _error$response4, _error$response4$data;\n      const message = ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.error) || 'Failed to set password';\n      toast.error(message);\n      throw error;\n    }\n  };\n\n  // Logout\n  const logout = () => {\n    dispatch({\n      type: AUTH_ACTIONS.LOGOUT\n    });\n    navigate('/');\n    toast.success('Logged out successfully!');\n  };\n\n  // Update user profile\n  const updateProfile = profileData => {\n    dispatch({\n      type: AUTH_ACTIONS.UPDATE_PROFILE,\n      payload: profileData\n    });\n  };\n\n  // Refresh token\n  const refreshToken = async () => {\n    try {\n      const refreshToken = localStorage.getItem('refreshToken');\n      if (!refreshToken) {\n        throw new Error('No refresh token available');\n      }\n      const response = await api.post('/auth/refresh-token', {\n        refreshToken\n      });\n      dispatch({\n        type: AUTH_ACTIONS.SET_TOKEN,\n        payload: response.data.token\n      });\n      dispatch({\n        type: AUTH_ACTIONS.SET_USER,\n        payload: response.data.user\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Token refresh failed:', error);\n      dispatch({\n        type: AUTH_ACTIONS.LOGOUT\n      });\n      throw error;\n    }\n  };\n\n  // Check if user has specific role\n  const hasRole = role => {\n    return state.user && state.user.role === role;\n  };\n\n  // Check if user is authenticated\n  const isAuthenticated = () => {\n    return !!state.token && !!state.user;\n  };\n\n  // Check if profile is complete\n  const isProfileComplete = () => {\n    return state.user && state.user.profileCompleted >= 80;\n  };\n  const value = {\n    // State\n    user: state.user,\n    token: state.token,\n    isLoading: state.isLoading,\n    error: state.error,\n    // Actions\n    loginWithOTP,\n    verifyOTP,\n    loginWithPassword,\n    setPassword,\n    logout,\n    updateProfile,\n    refreshToken,\n    // Utilities\n    hasRole,\n    isAuthenticated,\n    isProfileComplete\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 244,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook to use auth context\n_s(AuthProvider, \"D1vLWP9HbI77csWxKj7VuRZMOos=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","useNavigate","api","toast","jsxDEV","_jsxDEV","AUTH_ACTIONS","SET_LOADING","SET_USER","SET_TOKEN","LOGOUT","UPDATE_PROFILE","SET_ERROR","initialState","user","token","localStorage","getItem","isLoading","error","authReducer","state","action","type","payload","AuthContext","AuthProvider","children","_s","dispatch","navigate","defaults","headers","common","setItem","removeItem","checkAuth","response","get","data","console","loginWithOTP","phone","role","post","success","_error$response","_error$response$data","message","verifyOTP","otp","isNewUser","_error$response2","_error$response2$data","loginWithPassword","password","_error$response3","_error$response3$data","setPassword","_error$response4","_error$response4$data","logout","updateProfile","profileData","refreshToken","Error","hasRole","isAuthenticated","isProfileComplete","profileCompleted","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","$RefreshReg$"],"sources":["C:/Users/prans/Desktop/Projects/labour_issue/client/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport api from '../services/api';\r\nimport toast from 'react-hot-toast';\r\n\r\n// Action types\r\nconst AUTH_ACTIONS = {\r\n  SET_LOADING: 'SET_LOADING',\r\n  SET_USER: 'SET_USER',\r\n  SET_TOKEN: 'SET_TOKEN',\r\n  LOGOUT: 'LOGOUT',\r\n  UPDATE_PROFILE: 'UPDATE_PROFILE',\r\n  SET_ERROR: 'SET_ERROR'\r\n};\r\n\r\n// Initial state\r\nconst initialState = {\r\n  user: null,\r\n  token: localStorage.getItem('token'),\r\n  isLoading: true,\r\n  error: null\r\n};\r\n\r\n// Reducer\r\nconst authReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case AUTH_ACTIONS.SET_LOADING:\r\n      return { ...state, isLoading: action.payload };\r\n    \r\n    case AUTH_ACTIONS.SET_USER:\r\n      return { ...state, user: action.payload, isLoading: false, error: null };\r\n    \r\n    case AUTH_ACTIONS.SET_TOKEN:\r\n      return { ...state, token: action.payload };\r\n    \r\n    case AUTH_ACTIONS.LOGOUT:\r\n      return { ...state, user: null, token: null, isLoading: false, error: null };\r\n    \r\n    case AUTH_ACTIONS.UPDATE_PROFILE:\r\n      return { ...state, user: { ...state.user, ...action.payload } };\r\n    \r\n    case AUTH_ACTIONS.SET_ERROR:\r\n      return { ...state, error: action.payload, isLoading: false };\r\n    \r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// Create context\r\nconst AuthContext = createContext();\r\n\r\n// Auth provider component\r\nexport const AuthProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(authReducer, initialState);\r\n  const navigate = useNavigate();\r\n\r\n  // Set auth token in API headers\r\n  useEffect(() => {\r\n    if (state.token) {\r\n      api.defaults.headers.common['Authorization'] = `Bearer ${state.token}`;\r\n      localStorage.setItem('token', state.token);\r\n    } else {\r\n      delete api.defaults.headers.common['Authorization'];\r\n      localStorage.removeItem('token');\r\n    }\r\n  }, [state.token]);\r\n\r\n  // Check if user is authenticated on app load\r\n  useEffect(() => {\r\n    const checkAuth = async () => {\r\n      if (state.token) {\r\n        try {\r\n          const response = await api.get('/auth/me');\r\n          dispatch({ type: AUTH_ACTIONS.SET_USER, payload: response.data.user });\r\n        } catch (error) {\r\n          console.error('Auth check failed:', error);\r\n          dispatch({ type: AUTH_ACTIONS.LOGOUT });\r\n        }\r\n      } else {\r\n        dispatch({ type: AUTH_ACTIONS.SET_LOADING, payload: false });\r\n      }\r\n    };\r\n\r\n    checkAuth();\r\n  }, [state.token]);\r\n\r\n  // Login with OTP\r\n  const loginWithOTP = async (phone, role) => {\r\n    try {\r\n      dispatch({ type: AUTH_ACTIONS.SET_LOADING, payload: true });\r\n      \r\n      const response = await api.post('/auth/otp/send', { phone, role });\r\n      \r\n      toast.success('OTP sent successfully!');\r\n      return response.data;\r\n    } catch (error) {\r\n      const message = error.response?.data?.error || 'Failed to send OTP';\r\n      toast.error(message);\r\n      throw error;\r\n    } finally {\r\n      dispatch({ type: AUTH_ACTIONS.SET_LOADING, payload: false });\r\n    }\r\n  };\r\n\r\n  // Verify OTP and login\r\n  const verifyOTP = async (phone, otp, role) => {\r\n    try {\r\n      dispatch({ type: AUTH_ACTIONS.SET_LOADING, payload: true });\r\n      \r\n      const response = await api.post('/auth/otp/verify', { phone, otp, role });\r\n      \r\n      dispatch({ type: AUTH_ACTIONS.SET_TOKEN, payload: response.data.token });\r\n      dispatch({ type: AUTH_ACTIONS.SET_USER, payload: response.data.user });\r\n      \r\n      toast.success(response.data.message);\r\n      \r\n      // Redirect based on role\r\n      if (response.data.isNewUser) {\r\n        navigate(`/${role}/profile`);\r\n      } else {\r\n        navigate(`/${role}`);\r\n      }\r\n      \r\n      return response.data;\r\n    } catch (error) {\r\n      const message = error.response?.data?.error || 'Failed to verify OTP';\r\n      toast.error(message);\r\n      throw error;\r\n    } finally {\r\n      dispatch({ type: AUTH_ACTIONS.SET_LOADING, payload: false });\r\n    }\r\n  };\r\n\r\n  // Login with password\r\n  const loginWithPassword = async (phone, password, role) => {\r\n    try {\r\n      dispatch({ type: AUTH_ACTIONS.SET_LOADING, payload: true });\r\n      \r\n      const response = await api.post('/auth/login', { phone, password, role });\r\n      \r\n      dispatch({ type: AUTH_ACTIONS.SET_TOKEN, payload: response.data.token });\r\n      dispatch({ type: AUTH_ACTIONS.SET_USER, payload: response.data.user });\r\n      \r\n      toast.success('Login successful!');\r\n      \r\n      // Redirect based on role\r\n      navigate(`/${role}`);\r\n      \r\n      return response.data;\r\n    } catch (error) {\r\n      const message = error.response?.data?.error || 'Login failed';\r\n      toast.error(message);\r\n      throw error;\r\n    } finally {\r\n      dispatch({ type: AUTH_ACTIONS.SET_LOADING, payload: false });\r\n    }\r\n  };\r\n\r\n  // Set password\r\n  const setPassword = async (password) => {\r\n    try {\r\n      const response = await api.post('/auth/set-password', { password });\r\n      toast.success('Password set successfully!');\r\n      return response.data;\r\n    } catch (error) {\r\n      const message = error.response?.data?.error || 'Failed to set password';\r\n      toast.error(message);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // Logout\r\n  const logout = () => {\r\n    dispatch({ type: AUTH_ACTIONS.LOGOUT });\r\n    navigate('/');\r\n    toast.success('Logged out successfully!');\r\n  };\r\n\r\n  // Update user profile\r\n  const updateProfile = (profileData) => {\r\n    dispatch({ type: AUTH_ACTIONS.UPDATE_PROFILE, payload: profileData });\r\n  };\r\n\r\n  // Refresh token\r\n  const refreshToken = async () => {\r\n    try {\r\n      const refreshToken = localStorage.getItem('refreshToken');\r\n      if (!refreshToken) {\r\n        throw new Error('No refresh token available');\r\n      }\r\n\r\n      const response = await api.post('/auth/refresh-token', { refreshToken });\r\n      \r\n      dispatch({ type: AUTH_ACTIONS.SET_TOKEN, payload: response.data.token });\r\n      dispatch({ type: AUTH_ACTIONS.SET_USER, payload: response.data.user });\r\n      \r\n      return response.data;\r\n    } catch (error) {\r\n      console.error('Token refresh failed:', error);\r\n      dispatch({ type: AUTH_ACTIONS.LOGOUT });\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // Check if user has specific role\r\n  const hasRole = (role) => {\r\n    return state.user && state.user.role === role;\r\n  };\r\n\r\n  // Check if user is authenticated\r\n  const isAuthenticated = () => {\r\n    return !!state.token && !!state.user;\r\n  };\r\n\r\n  // Check if profile is complete\r\n  const isProfileComplete = () => {\r\n    return state.user && state.user.profileCompleted >= 80;\r\n  };\r\n\r\n  const value = {\r\n    // State\r\n    user: state.user,\r\n    token: state.token,\r\n    isLoading: state.isLoading,\r\n    error: state.error,\r\n    \r\n    // Actions\r\n    loginWithOTP,\r\n    verifyOTP,\r\n    loginWithPassword,\r\n    setPassword,\r\n    logout,\r\n    updateProfile,\r\n    refreshToken,\r\n    \r\n    // Utilities\r\n    hasRole,\r\n    isAuthenticated,\r\n    isProfileComplete\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\n// Custom hook to use auth context\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport default AuthContext;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}