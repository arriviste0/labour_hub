{"ast":null,"code":"import React from'react';import{Navigate}from'react-router-dom';import{useAuth}from'../../contexts/AuthContext';import{jsx as _jsx}from\"react/jsx-runtime\";const ProtectedRoute=_ref=>{let{children,role}=_ref;const{user,isLoading}=useAuth();// Show loading spinner while checking authentication\nif(isLoading){return/*#__PURE__*/_jsx(\"div\",{className:\"min-h-screen flex items-center justify-center\",children:/*#__PURE__*/_jsx(\"div\",{className:\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600\"})});}// Redirect to login if not authenticated\nif(!user){return/*#__PURE__*/_jsx(Navigate,{to:\"/login\",replace:true});}// Check role-based access\nif(role&&user.role!==role){// Redirect to appropriate dashboard based on user's role\nif(user.role==='worker'){return/*#__PURE__*/_jsx(Navigate,{to:\"/worker\",replace:true});}else if(user.role==='employer'){return/*#__PURE__*/_jsx(Navigate,{to:\"/employer\",replace:true});}else if(user.role==='admin'){return/*#__PURE__*/_jsx(Navigate,{to:\"/admin\",replace:true});}// Fallback to home page\nreturn/*#__PURE__*/_jsx(Navigate,{to:\"/\",replace:true});}// User is authenticated and has the required role\nreturn children;};export default ProtectedRoute;","map":{"version":3,"names":["React","Navigate","useAuth","jsx","_jsx","ProtectedRoute","_ref","children","role","user","isLoading","className","to","replace"],"sources":["C:/Users/prans/Desktop/Projects/labour_issue/client/src/components/auth/ProtectedRoute.js"],"sourcesContent":["import React from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { useAuth } from '../../contexts/AuthContext';\r\n\r\nconst ProtectedRoute = ({ children, role }) => {\r\n  const { user, isLoading } = useAuth();\r\n\r\n  // Show loading spinner while checking authentication\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"min-h-screen flex items-center justify-center\">\r\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600\"></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Redirect to login if not authenticated\r\n  if (!user) {\r\n    return <Navigate to=\"/login\" replace />;\r\n  }\r\n\r\n  // Check role-based access\r\n  if (role && user.role !== role) {\r\n    // Redirect to appropriate dashboard based on user's role\r\n    if (user.role === 'worker') {\r\n      return <Navigate to=\"/worker\" replace />;\r\n    } else if (user.role === 'employer') {\r\n      return <Navigate to=\"/employer\" replace />;\r\n    } else if (user.role === 'admin') {\r\n      return <Navigate to=\"/admin\" replace />;\r\n    }\r\n    // Fallback to home page\r\n    return <Navigate to=\"/\" replace />;\r\n  }\r\n\r\n  // User is authenticated and has the required role\r\n  return children;\r\n};\r\n\r\nexport default ProtectedRoute;\r\n\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,QAAQ,KAAQ,kBAAkB,CAC3C,OAASC,OAAO,KAAQ,4BAA4B,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAErD,KAAM,CAAAC,cAAc,CAAGC,IAAA,EAAwB,IAAvB,CAAEC,QAAQ,CAAEC,IAAK,CAAC,CAAAF,IAAA,CACxC,KAAM,CAAEG,IAAI,CAAEC,SAAU,CAAC,CAAGR,OAAO,CAAC,CAAC,CAErC;AACA,GAAIQ,SAAS,CAAE,CACb,mBACEN,IAAA,QAAKO,SAAS,CAAC,+CAA+C,CAAAJ,QAAA,cAC5DH,IAAA,QAAKO,SAAS,CAAC,gEAAgE,CAAM,CAAC,CACnF,CAAC,CAEV,CAEA;AACA,GAAI,CAACF,IAAI,CAAE,CACT,mBAAOL,IAAA,CAACH,QAAQ,EAACW,EAAE,CAAC,QAAQ,CAACC,OAAO,MAAE,CAAC,CACzC,CAEA;AACA,GAAIL,IAAI,EAAIC,IAAI,CAACD,IAAI,GAAKA,IAAI,CAAE,CAC9B;AACA,GAAIC,IAAI,CAACD,IAAI,GAAK,QAAQ,CAAE,CAC1B,mBAAOJ,IAAA,CAACH,QAAQ,EAACW,EAAE,CAAC,SAAS,CAACC,OAAO,MAAE,CAAC,CAC1C,CAAC,IAAM,IAAIJ,IAAI,CAACD,IAAI,GAAK,UAAU,CAAE,CACnC,mBAAOJ,IAAA,CAACH,QAAQ,EAACW,EAAE,CAAC,WAAW,CAACC,OAAO,MAAE,CAAC,CAC5C,CAAC,IAAM,IAAIJ,IAAI,CAACD,IAAI,GAAK,OAAO,CAAE,CAChC,mBAAOJ,IAAA,CAACH,QAAQ,EAACW,EAAE,CAAC,QAAQ,CAACC,OAAO,MAAE,CAAC,CACzC,CACA;AACA,mBAAOT,IAAA,CAACH,QAAQ,EAACW,EAAE,CAAC,GAAG,CAACC,OAAO,MAAE,CAAC,CACpC,CAEA;AACA,MAAO,CAAAN,QAAQ,CACjB,CAAC,CAED,cAAe,CAAAF,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}